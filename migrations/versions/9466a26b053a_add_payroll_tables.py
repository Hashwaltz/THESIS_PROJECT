"""Add payroll tables

Revision ID: 9466a26b053a
Revises: be3b0be5b6e7
Create Date: 2025-09-23 22:20:29.321520

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9466a26b053a'
down_revision = 'be3b0be5b6e7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('allowance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('percentage', sa.Float(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('deduction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('percentage', sa.Float(), nullable=True),
    sa.Column('is_mandatory', sa.Boolean(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payroll_period',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('period_name', sa.String(length=100), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('pay_date', sa.Date(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tax',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('min_income', sa.Float(), nullable=False),
    sa.Column('max_income', sa.Float(), nullable=False),
    sa.Column('tax_rate', sa.Float(), nullable=False),
    sa.Column('fixed_amount', sa.Float(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payroll',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('pay_period_start', sa.Date(), nullable=False),
    sa.Column('pay_period_end', sa.Date(), nullable=False),
    sa.Column('basic_salary', sa.Float(), nullable=False),
    sa.Column('overtime_hours', sa.Float(), nullable=True),
    sa.Column('overtime_pay', sa.Float(), nullable=True),
    sa.Column('holiday_pay', sa.Float(), nullable=True),
    sa.Column('night_differential', sa.Float(), nullable=True),
    sa.Column('gross_pay', sa.Float(), nullable=False),
    sa.Column('sss_contribution', sa.Float(), nullable=True),
    sa.Column('philhealth_contribution', sa.Float(), nullable=True),
    sa.Column('pagibig_contribution', sa.Float(), nullable=True),
    sa.Column('tax_withheld', sa.Float(), nullable=True),
    sa.Column('other_deductions', sa.Float(), nullable=True),
    sa.Column('total_deductions', sa.Float(), nullable=True),
    sa.Column('net_pay', sa.Float(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payslip',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('payroll_id', sa.Integer(), nullable=False),
    sa.Column('payslip_number', sa.String(length=50), nullable=False),
    sa.Column('pay_period_start', sa.Date(), nullable=False),
    sa.Column('pay_period_end', sa.Date(), nullable=False),
    sa.Column('basic_salary', sa.Float(), nullable=False),
    sa.Column('overtime_pay', sa.Float(), nullable=True),
    sa.Column('holiday_pay', sa.Float(), nullable=True),
    sa.Column('night_differential', sa.Float(), nullable=True),
    sa.Column('allowances', sa.Float(), nullable=True),
    sa.Column('gross_pay', sa.Float(), nullable=False),
    sa.Column('sss_contribution', sa.Float(), nullable=True),
    sa.Column('philhealth_contribution', sa.Float(), nullable=True),
    sa.Column('pagibig_contribution', sa.Float(), nullable=True),
    sa.Column('tax_withheld', sa.Float(), nullable=True),
    sa.Column('other_deductions', sa.Float(), nullable=True),
    sa.Column('total_deductions', sa.Float(), nullable=True),
    sa.Column('net_pay', sa.Float(), nullable=False),
    sa.Column('generated_at', sa.DateTime(), nullable=True),
    sa.Column('generated_by', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['payroll_id'], ['payroll.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('payslip_number')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payslip')
    op.drop_table('payroll')
    op.drop_table('tax')
    op.drop_table('payroll_period')
    op.drop_table('deduction')
    op.drop_table('allowance')
    # ### end Alembic commands ###
